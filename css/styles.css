/* Apply grid background to the entire body for an infinite canvas */
body {
    margin: 0;
    overflow: hidden;
    font-family: 'Poppins', 'Roboto', sans-serif;
    background-color: #f8f9fa;
    background-image:
        linear-gradient(0deg, rgba(0,0,0,0.05) 1px, transparent 1px),
        linear-gradient(90deg, rgba(0,0,0,0.05) 1px, transparent 1px);
    background-size: 20px 20px; /* Grid size */
    background-position: 0 0;
    transform-origin: 0 0;
    cursor: default;
}

/* Set canvas container to cover the entire body */
#canvas-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    cursor: default;
    overflow: hidden;
}

#canvas-transform {
    position: absolute;
    top: 0;
    left: 0;
    width: 2000px;
    height: 2000px;
    transform-origin: 0 0;
    overflow: visible;
}

#canvas-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 2000px;
    height: 2000px;
    transform-origin: 0 0;
    background-size: inherit;
    overflow: visible;
}

.connection-layer {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: visible;
}

.connection-path {
    stroke: #007BFF;
    stroke-width: 2px;
    fill: none;
    pointer-events: stroke;
    transition: stroke 0.2s ease;
}

.connection-path.connection-dashed {
    stroke-dasharray: 6 4;
}

.connection-path.connection-animated {
    animation: connection-dash-forward 1.2s linear infinite;
}

.connection-path.reverse-flow {
    animation-direction: reverse;
}

.connection-preview {
    pointer-events: none;
    stroke-opacity: 0.6;
}

.connection-point.connection-hover {
    box-shadow: 0 0 0 4px rgba(0, 123, 255, 0.35);
}

/* Header styles */
#header-bar {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background-color: #007BFF;
    color: white;
    display: flex;
    align-items: center;
    justify-content: space-between;
    flex-wrap: wrap;
    gap: 10px 16px;
    padding: 10px 20px;
    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);
    z-index: 1000;
    box-sizing: border-box;
}

#header-bar h1 {
    margin: 0;
    font-size: 20px;
    font-weight: bold;
    font-family: 'Poppins', sans-serif;
    flex: 0 0 auto;
}

#header-bar #clear-btn {
    background-color: #FF4D4D;
    color: white;
    border: none;
    border-radius: 4px;
    padding: 8px 12px;
    font-size: 14px;
    cursor: pointer;
    font-family: 'Poppins', sans-serif;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);
}

#header-bar #clear-btn:hover {
    background-color: #E63939;

}

.chart-controls {
    display: flex;
    align-items: center;
    justify-content: flex-end;
    gap: 8px;
    flex: 1 1 420px;
    max-width: 100%;
    flex-wrap: wrap;
}

.chart-controls input,
.chart-controls select {
    border: 1px solid #d0d7de;
    border-radius: 4px;
    padding: 6px 8px;
    font-size: 14px;
    font-family: 'Poppins', sans-serif;
    background-color: #ffffff;
    min-height: 34px;
    flex: 1 1 160px;
    min-width: 120px;
}

.chart-controls select {
    min-width: 180px;
    flex: 1 1 180px;
}

.chart-controls button {
    border: none;
    border-radius: 4px;
    padding: 8px 12px;
    font-size: 14px;
    cursor: pointer;
    font-family: 'Poppins', sans-serif;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);
    background-color: #007BFF;
    color: #ffffff;
    flex: 0 0 auto;
}

.chart-controls button:hover {
    background-color: #0062cc;
}

.chart-controls #save-chart-btn {
    background-color: #28a745;
}

.chart-controls #save-chart-btn:hover {
    background-color: #1f8536;
}

.chart-controls #delete-chart-btn,
.chart-controls #clear-btn {
    background-color: #FF4D4D;
}

.chart-controls #delete-chart-btn:hover,
.chart-controls #clear-btn:hover {
    background-color: #E63939;
}

.chart-controls #settings-btn {
    background: none;
    border: none;
    box-shadow: none;
    padding: 0;
    font-size: 20px;
    line-height: 1;
    color: #ffffff;
    cursor: pointer;
}

.chart-controls #settings-btn:hover {
    color: #dfe3e6;
}



/* Node container */
.node {
    position: absolute;
    width: 150px;
    min-width: 100px;
    min-height: 60px;
    background-color: #ffffff;
    border: 2px solid #007BFF;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    user-select: none;
    resize: none;
    overflow: visible;
    transition: box-shadow 0.2s ease;
}

/* Top bar for drag handle and delete button */
.node-top-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #007BFF;
    color: white;
    padding: 4px 8px;
    font-weight: bold;
    border-top-left-radius: 6px;
    border-top-right-radius: 6px;
    cursor: move;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    transform: translateY(-100%);
    opacity: 0;
    transition: transform 0.2s ease, opacity 0.2s ease;
}

.node:hover .node-top-bar {
    transform: translateY(0);
    opacity: 1;
}

/* Drag handle */
.node-drag-handle {
    flex-grow: 1;
    cursor: move;
    color: white;
    font-size: 12px;
}

/* Delete button */
.node-delete-button {
    color: #ffffff; /* Red color for delete */
    font-size: 12px;
    cursor: pointer;
    margin-left: 8px;
}

/* Textarea inside the node */
.node-textarea {
    width: 100%;
    height: calc(100% - 30px);
    border: none;
    padding: 8px;
    resize: none;
    outline: none;
    background: transparent;
    font-family: inherit;
    font-size: 14px;
    box-sizing: border-box;
    overflow: auto;
    scrollbar-width: none;
}

.node-textarea::-webkit-scrollbar {
    display: none;
}

.node-image-container .node-image {
    width: 100%;
    height: calc(100% - 30px);
    object-fit: contain;
    display: block;
    border-bottom-left-radius: 8px;
    border-bottom-right-radius: 8px;
}

/* Resize handle at the bottom-right corner of the node */
.resize-handle {
    position: absolute;
    width: 12px;
    height: 12px;
    bottom: 0;
    right: 0;
    background-color: #007BFF;
    cursor: se-resize;
    border-top-left-radius: 2px;
}

.connection-point {
    position: absolute;
    width: 16px;
    height: 16px;
    background-color: #007BFF;
    border: 2px solid #ffffff;
    border-radius: 50%;
    cursor: pointer;
    box-shadow: 0 0 6px rgba(0, 123, 255, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 10;
    pointer-events: auto;
}

.connection-point::after {
    content: '';
    position: absolute;
    width: 6px;
    height: 6px;
    background-color: #ffffff;
    border-radius: 50%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    pointer-events: none;
}

#settings-drawer {
    position: fixed;
    top: 0;
    right: 0;
    width: 280px;
    max-width: 80vw;
    height: 100vh;
    background: #ffffff;
    box-shadow: -2px 0 12px rgba(0, 0, 0, 0.2);
    transform: translateX(100%);
    transition: transform 0.25s ease;
    display: flex;
    flex-direction: column;
    z-index: 1500;
    border-left: 1px solid #d0d7de;
}

#settings-drawer.open {
    transform: translateX(0);
}

.settings-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 16px;
    border-bottom: 1px solid #d0d7de;
}

.settings-header h2 {
    margin: 0;
    font-size: 18px;
}

.settings-header button {
    background: none;
    border: none;
    font-size: 20px;
    cursor: pointer;
    line-height: 1;
}

.settings-body {
    padding: 16px;
    display: flex;
    flex-direction: column;
    gap: 16px;
}

.settings-field {
    display: flex;
    flex-direction: column;
    gap: 8px;
    font-family: 'Poppins', sans-serif;
    font-size: 14px;
}

.settings-field.toggle {
    flex-direction: row;
    align-items: center;
    gap: 10px;
}

.settings-field.toggle span {
    font-size: 14px;
}

.connection-animated path {
    stroke-dasharray: 6;
    animation: connection-dash-forward 1.2s linear infinite;
}

.connection-animated.reverse path {
    animation-name: connection-dash-reverse;
}

.connection-animated.horizontal-flow path {
    animation-duration: 1s;
}

.connection-animated.vertical-flow path {
    animation-duration: 1.1s;
}

@keyframes connection-dash-forward {
    from {
        stroke-dashoffset: 0;
    }
    to {
        stroke-dashoffset: -24;
    }
}

@keyframes connection-dash-reverse {
    from {
        stroke-dashoffset: 0;
    }
    to {
        stroke-dashoffset: 24;
    }
}

.connection-point.top {
    top: 0;
    left: 50%;
    transform: translate(-50%, -50%);
}

.connection-point.right {
    right: 0;
    top: 50%;
    transform: translate(50%, -50%);
}

.connection-point.bottom {
    bottom: 0;
    left: 50%;
    transform: translate(-50%, 50%);
}

.connection-point.left {
    left: 0;
    top: 50%;
    transform: translate(-50%, -50%);
}

path {
    stroke: red !important;
    stroke-width: 2px !important;
}
